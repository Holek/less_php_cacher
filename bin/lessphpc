#!/usr/bin/env ruby
 
require File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'less_php_cacher'))

arg = (ARGV[0] ||= 'help').gsub(/\A\--*/, '')

if File.exist?("#{arg}.less")
  if Less::PHP.ready?
    Less::PHP.cache(arg)
  else
    puts "Please run 'lessphpc prepare' to initialize this project."
  end
else  
  case arg
  when 'prepare'
    unless Less::PHP.ready?
      Less::PHP.prepare
      puts "LESS PHP wrapper script and cache folder created."
    else
      puts "LESS is already prepared and ready for use."
    end
  when 'remove'
    if Less::PHP.ready?
      Less::PHP.remove
      puts "LESS PHP wrapper script removed. The cache folder should be removed manually."
    else
      puts "Can't find the LESS PHP wrapper script."
    end
  when 'update'
    if Less::PHP.ready?
      Less::PHP.update
      puts "LESS PHP wrapper script has been updated to the latest version."
    else
      puts "Can't find the LESS PHP wrapper script."
    end
  else
    help = <<EOF
/**
 * LESS PHP cacher [http://github.com/aaronrussell/less_php_cacher]
 * Extension to LESS for creating cached stylesheets your PHP projects can use
 * Copyright (c) 2009 Aaron Russell [http://www.aaronrussell.co.uk]
 * Licensed under the MIT license [http://www.opensource.org/licenses/mit-license.php]
 * Less is maintained by Alexis Sellier [http://github.com/cloudhead/less]
 *
 * Preparation: lessphpc [command]
 *  Commands:
 *    prepare   Installs the PHP wrapper for LESS and creates a cache folder in your web root
 *    remove    Removes the PHP wrapper from your web project
 *    update    Updates the PHP wrapper to the latest version
 *    help      Displays this help dialogue
 *
 * Integration:
 *  <link rel="stylesheet" href="less.php?stylesheet.less" type="text/css">
 *  ..or..
 *  <?php include 'less.php'; ?>
 *  <style type="text/css">
 *    <?php less_php('stylesheet.less'); ?>
 *  </style>
 **/
EOF
    puts help
  end
end